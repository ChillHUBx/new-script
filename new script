local CoreGui = game:GetService("StarterGui") -- Variable of StarterGui
wait(0.9) 
CoreGui:SetCore("SendNotification", {
    -- Customizable
    Title = "System☢️",
    Text = "9.9.9",
    Duration = 19, -- Set the duration to how much you want this to stay
    -- More code in part 2
})

Wait(2)

local CoreGui = game:GetService("StarterGui") -- Variable of StarterGui
wait(0.9) 
CoreGui:SetCore("SendNotification", {
    -- Customizable
    Title = "script it's Done",
    Text = "script loading wait 2",
    Duration = 10, -- Set the duration to how much you want this to stay
    -- More code in part 2
})

Wait(2)
print("👑 Wellcome to the script")
print("🔳🔳🔳🔳🔳🔳🔳🔳🔳🔳") 
print("🔳🔳🔳🔳🔳🔳🔳🔳🔳🔳")
print("🔳🔳🔳🔳🔳🔳🔳🔳🔳🔳")
print("🟩🟩🟩🟩🟩🟩🟩🟩🟩🟩") 
print("🟩🟩🟩🟩🟩🟩🟩🟩🟩🟩")


print("🟩🟩🟩🟩🟩🟩🟩🟩🟩🟩")
print("System.Script it's working no update to day")

local DiscordLib = loadstring(game:HttpGet"https://raw.githubusercontent.com/dawid-scripts/UI-Libs/main/discord%20lib.txt")()

local Win1 = DiscordLib:Window("ChillHUBx") -- Title/Name

local Tab1 = Win1:Server("HOME", "") -- Server/Tab

local Chann1 = Tab1:Channel("Channel(1)") -- Channel 0_0

Chann1:Button("jump infi", function()
local InfiniteJumpEnabled = true
game:GetService("UserInputService").JumpRequest:connect(function()
	if InfiniteJumpEnabled then
		game:GetService"Players".LocalPlayer.Character:FindFirstChildOfClass'Humanoid':ChangeState("Jumping")
	end
end) -- The Scirpt The Button Executes
end)

Chann1:Seperator() -- Keep This If You Want To

Chann1:Toggle("Toggle",false, function(bool)
print(bool) -- Script The Toggle Executes
end)

local Tab1 = Win1:Server("Main", "") -- Server/Tab
local Chann1 = Tab1:Channel("player") -- Channel 0_0

Chann1:Button("Fov", function()
game.Workspace.CurrentCamera.FieldOfView = 120
end) -- The Scirpt The Button Executes

Chann1:Button(" Fov reset☢️", function()
game.Workspace.CurrentCamera.FieldOfView = 80
end) -- The Scirpt The Button Executes

Chann1:Button("ESP 👁‍🗨", function()
--// Universal Box ESP (Works on Arsenal and other games)

-- settings
local settings = {
   defaultcolor = Color3.fromRGB(398,0,0),
   teamcheck = false,
   teamcolor = true
   
};

-- services
local runService = game:GetService("RunService");
local players = game:GetService("Players");

-- variables
local localPlayer = players.LocalPlayer;
local camera = workspace.CurrentCamera;

-- functions
local newVector2, newColor3, newDrawing = Vector2.new, Color3.new, Drawing.new;
local tan, rad = math.tan, math.rad;
local round = function(...) local a = {}; for i,v in next, table.pack(...) do a[i] = math.round(v); end return unpack(a); end;
local wtvp = function(...) local a, b = camera.WorldToViewportPoint(camera, ...) return newVector2(a.X, a.Y), b, a.Z end;

local espCache = {};
local function createEsp(player)
   local drawings = {};
   
   drawings.box = newDrawing("Square");
   drawings.box.Thickness = 1;
   drawings.box.Filled = false;
   drawings.box.Color = settings.defaultcolor;
   drawings.box.Visible = false;
   drawings.box.ZIndex = 2;

   drawings.boxoutline = newDrawing("Square");
   drawings.boxoutline.Thickness = 3;
   drawings.boxoutline.Filled = false;
   drawings.boxoutline.Color = newColor3();
   drawings.boxoutline.Visible = false;
   drawings.boxoutline.ZIndex = 1;

   espCache[player] = drawings;
end

local function removeEsp(player)
   if rawget(espCache, player) then
       for _, drawing in next, espCache[player] do
           drawing:Remove();
       end
       espCache[player] = nil;
   end
end

local function updateEsp(player, esp)
   local character = player and player.Character;
   if character then
       local cframe = character:GetModelCFrame();
       local position, visible, depth = wtvp(cframe.Position);
       esp.box.Visible = visible;
       esp.boxoutline.Visible = visible;

       if cframe and visible then
           local scaleFactor = 1 / (depth * tan(rad(camera.FieldOfView / 2)) * 2) * 1000;
           local width, height = round(4 * scaleFactor, 5 * scaleFactor);
           local x, y = round(position.X, position.Y);

           esp.box.Size = newVector2(width, height);
           esp.box.Position = newVector2(round(x - width / 2, y - height / 2));
           esp.box.Color = settings.teamcolor and player.TeamColor.Color or settings.defaultcolor;

           esp.boxoutline.Size = esp.box.Size;
           esp.boxoutline.Position = esp.box.Position;
       end
   else
       esp.box.Visible = false;
       esp.boxoutline.Visible = false;
   end
end

-- main
for _, player in next, players:GetPlayers() do
   if player ~= localPlayer then
       createEsp(player);
   end
end

players.PlayerAdded:Connect(function(player)
   createEsp(player);
end);

players.PlayerRemoving:Connect(function(player)
   removeEsp(player);
end)

runService:BindToRenderStep("esp", Enum.RenderPriority.Camera.Value, function()
   for player, drawings in next, espCache do
       if settings.teamcheck and player.Team == localPlayer.Team then
           continue;
       end

       if drawings and player ~= localPlayer then
           updateEsp(player, drawings);
       end
   end
end)
end) -- The Scirpt The Button Executes

Chann1:Button("??", function()

end) -- The Scirpt The Button Executes

Chann1:Button("????", function()

end) -- The Scirpt The Button Executes

chann1:button("??", function()

end) -- the scirpt the button executes

local Chann1 = Tab1:Channel("anti and more☢️")
Chann1:Button("anti report🔰", function()
 --setting--
end) -- The Scirpt The Button Executes

Chann1:Button("auto jump", function()
while true do wait(1)
game:GetService"Players".LocalPlayer.Character:FindFirstChildOfClass'Humanoid':ChangeState("Jumping") end

end) -- The Scirpt The Button Executes

Chann1:Button("auto click tool? ", function()
--// Setting \--
local range = 99e9

--// Variable \--
local player = game:GetService("Players").LocalPlayer

--// Script \--
game:GetService("RunService").RenderStepped:Connect(function()
    local p = game.Players:GetPlayers()
    for i = 2, #p do local v = p[i].Character
        if v and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 and v:FindFirstChild("HumanoidRootPart") and player:DistanceFromCharacter(v.HumanoidRootPart.Position) <= range then
            local tool = player.Character and player.Character:FindFirstChildOfClass("Tool")
            if tool and tool:FindFirstChild("Handle") then
                tool:Activate()
                for i,v in next, v:GetChildren() do
                    if v:IsA("BasePart") then
                        firetouchinterest(tool.Handle,v,0)
                        firetouchinterest(tool.Handle,v,1)
                    end
                end
            end
        end
    end
end)
end) -- The Scirpt The Button Executes

Chann1:Label("chillhubx.") -- A Label (Ofc)

local Chann1 = Tab1:Channel("auto pickup item") -- Channel 0_0

chann1:button("on", function()
--auto pickup
_G.on = true --false to turn off and true to turn on
while _G.on do
wait(1) -- you can change the delay here
char = game:GetService('Players').LocalPlayer.Character
game:GetService('Players').LocalPlayer.CharacterAdded:connect(function(body)
char = body end)
for i,v in pairs(workspace:GetDescendants()) do
if v:IsA('Tool') then
char.Humanoid:EquipTool(v) end end
end
end) -- the scirpt the button executes

--main--

chann1:button("off", function()
--auto pickup
_G.on = false --false to turn off and true to turn on
while _G.on do
wait(1) -- you can change the delay here
char = game:GetService('Players').LocalPlayer.Character
game:GetService('Players').LocalPlayer.CharacterAdded:connect(function(body)
char = body end)
for i,v in pairs(workspace:GetDescendants()) do
if v:IsA('Tool') then
char.Humanoid:EquipTool(v) end end
end
end) -- the scirpt the button executes

